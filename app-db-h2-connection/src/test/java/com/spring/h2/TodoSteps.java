package com.spring.h2;

import com.spring.h2.dto.TodoRequest;
import com.spring.h2.dto.TodoResponse;
import com.spring.h2.model.Todo;
import com.spring.h2.service.TodoService;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpEntity;
import org.springframework.http.ResponseEntity;

import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class TodoSteps {

    @Autowired
    private TestRestTemplate testRestTemplate;

    @Autowired
    private TodoService todoService;

    private Todo todo;
    private TodoRequest todoRequest;
    private ResponseEntity<TodoResponse> todoResponse;

    @Given("the following todo details:")
    public void theFollowingTodoDetails(Map<String, String> todoDetails) {
        todoRequest = new TodoRequest(todoDetails.get("todo"), Boolean.parseBoolean(todoDetails.get("completed")));
    }

    @When("I send a POST request to {string} with this todo")
    public void iSendAPOSTRequestToWithThisTodo(String endpoint) {
        HttpEntity<TodoRequest> requestEntity = new HttpEntity<>(todoRequest);
        todoResponse = testRestTemplate.postForEntity(endpoint, requestEntity, TodoResponse.class);
        System.out.println("From when:"+todoResponse);
    }

    @Then("the response should contain the saved todo with an auto-generated ID")
    public void theResponseShouldContainTheSavedTodoWithAnAutoGeneratedID() {
        TodoResponse savedTodo = todoResponse.getBody();
        System.out.println(savedTodo);
        assertNotNull(savedTodo);
        assertNotNull(savedTodo.getId());
        assertEquals(todoRequest.getTodo(), savedTodo.getTodo());
        assertEquals(todoRequest.isComplete(), savedTodo.isComplete());
    }

    @And("the status code should be {int}")
    public void theStatusCodeShouldBe(int statusCode) {
        assertEquals(statusCode, todoResponse.getStatusCode().value());
    }

    @And("the saved todo should exists in the database")
    public void theSavedTodoShouldExistsInTheDatabase() {
        TodoResponse savedTodo = todoResponse.getBody();
        assertNotNull(savedTodo);
        TodoResponse retrievedTodo = todoService.getTodoById(savedTodo.getId());
        assertEquals(savedTodo, retrievedTodo);
    }
}
